@page "/login"
@using Blazored.LocalStorage
@using System.Security.Claims
@using AZ_Inz.Classes.DTO

@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager Navigation

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

<input @bind="username" placeholder="Username" />
<input @bind="password" type="password" placeholder="Password" />
<button @onclick="LoginUser">Login</button>

@code {
    private string username { get; set; }
    private string password { get; set; }
    private string errorMessage { get; set; }

    public class LoginResponse
    {
        public string Token { get; set; }
    }

    private async Task LoginUser()
    {
        LoginModelDTO user = new()
        {
            Username = username,
            Password = password
        };

        var response = await Http.PostAsJsonAsync("https://localhost:7060/api/auth/login", user);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();

            if (result != null && !string.IsNullOrEmpty(result.Token))
            {
                await LocalStorage.SetItemAsync("authToken", result.Token);
                AuthStateProvider.NotifyUserAuthentication(result.Token); 

                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Invalid token received.";
            }
        }
        else
        {
            errorMessage = "Invalid login attempt.";
        }
    }
}
