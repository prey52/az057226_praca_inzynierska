@page "/register"

@using System.Net.Http.Json
@using Blazored.LocalStorage

@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation

<h3>Register</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}

<div>
    <label for="username">Username</label>
    <input id="username" @bind="Username" placeholder="Enter username" />
</div>
<div>
    <label for="email">Email</label>
    <input id="email" @bind="Email" type="email" placeholder="Enter email" />
</div>
<div>
    <label for="password">Password</label>
    <input id="password" @bind="Password" type="password" placeholder="Enter password" />
</div>
<div>
    <label for="confirmPassword">Confirm Password</label>
    <input id="confirmPassword" @bind="ConfirmPassword" type="password" placeholder="Confirm password" />
</div>
<button @onclick="RegisterUser">Register</button>

@code {
    private string Username { get; set; }
    private string Email { get; set; }
    private string Password { get; set; }
    private string ConfirmPassword { get; set; }
    private string ErrorMessage { get; set; }

    public class RegisterResponse
    {
        public string Token { get; set; }
    }


    private async Task RegisterUser()
    {
        if (Password != ConfirmPassword)
        {
            ErrorMessage = "Passwords do not match!";
            return;
        }

        var user = new
        {
            Username,
            Email,
            Password
        };

        var response = await Http.PostAsJsonAsync("https://localhost:7060/api/Auth/register", user);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<RegisterResponse>();

            await LocalStorage.SetItemAsync("authToken", result);

            Navigation.NavigateTo("/login");
        }
        else
        {
            ErrorMessage = "Registration failed. Please try again.";
        }
    }
}
